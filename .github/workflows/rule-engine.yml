name: rule-engine rust


on:
  workflow_dispatch:
    inputs:
      osInput:
        description: '编译系统'
        required: true
        default: 'windows'
        type: choice
        options:
          - windows
          - macos
          - linux
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    name: cargo windows-x86_64 ${{ matrix.channel }} build
    strategy:
      fail-fast: true
      matrix:
        channel:
          - nightly
    runs-on: windows-latest
    permissions:
      contents: read
      packages: write
    environment: rule-engine
    steps:
      - uses: actions/checkout@v3
      - name: In rule-engine
        run: cd boot-extension/rule-engine
      - name: Install Rust
        run: rustup update ${{ matrix.channel }} && rustup default ${{ matrix.channel }}
      - name: Build
        run: rustup target add x86_64-pc-windows-gnu && cargo build --release --target x86_64-pc-windows-gnu
      - name: Copy
        run: cp -f target/x86_64-pc-windows-gnu/release/zen_engine.dll ./src/main/resources/zen_engine-windows-x86_64.dll
      - name: Setup Ossutil
        # You may pin to the exact commit or the version.
        # uses: manyuanrong/setup-ossutil@b74103470b3890349167a84773d33158511cf11d
        uses: manyuanrong/setup-ossutil@v3.0
        with:
          endpoint: https://oss-cn-shenzhen.aliyuncs.com
          access-key-id: ${{ env.ACCESS_KEY }}
          access-key-secret: ${{ env.SECRET_KEY }}
      - name: Upload     
        run: ossutil cp ./src/main/resources/zen_engine-windows-x86_64.dll oss://workoss/static
